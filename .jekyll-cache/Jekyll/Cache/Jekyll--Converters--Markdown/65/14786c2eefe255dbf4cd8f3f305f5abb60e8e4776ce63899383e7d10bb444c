I"â	
<head>
<script type="text/javascript" async="" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: [
      "MathMenu.js",
      "MathZoom.js",
      "AssistiveMML.js",
      "a11y/accessibility-menu.js"
    ],
    jax: ["input/TeX", "output/CommonHTML"],
    TeX: {
      extensions: [
        "AMSmath.js",
        "AMSsymbols.js",
        "noErrors.js",
        "noUndefined.js",
      ]
    }
  });
</script>
</head>

<head>
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
</head>

<p>Suppose we have two objects with known geographic coordinates in <a href="http://en.wikipedia.org/wiki/World_Geodetic_System">WGS84</a>. Here is a simplified formula for calculating the Earth distance \(D\) between these two objects in kilometers.
\(D = 6378.137 \times \arccos(S)\)
\(S = \cos\big(R(\phi_1)\big) \cos\big(R(\phi_2\big) \cos\big(R(\lambda_2-\lambda_1)\big) + \sin\big(R(\phi_1)\big) \sin\big(R(\phi_2)\big)\)
\(R(x) = \frac{x\pi}{180}\)
Here \(\phi_1\) is the latitude of object \(1\), \(\lambda_1\) is the longitude of object \(1\), and \(\phi_2$, $\lambda_2\) are the coordinates of object \(2\) correspondingly. Function \(R()\) converts degrees to radians.</p>

<p>More information can be found <a href="http://www.mapanet.eu/EN/resources/Script-Distance.htm">here</a>.</p>

<p><strong>Example</strong></p>

<p>Helsinki \(\lambda_1 = 60.1708\), \(\phi_1 = 24.9375\)</p>

<p>Vilnius \(\lambda_2 = 54.6833\), \(\phi_2 = 25.2833\)</p>

\[\cos\big(R(\phi_1)\big) = 0.90677\]

\[\cos\big(R(\phi_2)\big) = 0.90420\]

\[\cos\big(R(\lambda_2-\lambda_1)\big) = 0.99542\]

\[\sin\big(R(\phi_1)\big) = 0.42163\]

\[\sin\big(R(\phi_2)\big) = 0.42709\]

\[S = 0.99622\]

<p>Distance \(D = 6378.137Ã—\arccos(S) = 554.742\) km</p>

<p><strong>R code</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>deg_to_radians &lt;- function(degrees)
{
  return(degrees*pi/180)
}

compute_geo_distance &lt;- function(lat1,lon1,lat2,lon2) #in km
{
  rearth = 6378.137 #Earth Radius in km
  fi1 &lt;- cos(deg_to_radians(lat1))*cos(deg_to_radians(lat2))*cos(deg_to_radians(lon2-lon1))
  fi2 &lt;- sin(deg_to_radians(lat1))*sin(deg_to_radians(lat2))
  dist = rearth*acos(fi1+fi2)
  return(dist)
}

compute_geo_distance(24.9375,60.1708,25.2833,54.6833)
</code></pre></div></div>
:ET