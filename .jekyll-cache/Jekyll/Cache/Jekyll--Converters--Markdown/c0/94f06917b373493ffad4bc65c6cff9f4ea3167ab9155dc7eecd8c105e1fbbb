I"Ô
<head>
<script type="text/javascript" async="" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: [
      "MathMenu.js",
      "MathZoom.js",
      "AssistiveMML.js",
      "a11y/accessibility-menu.js"
    ],
    jax: ["input/TeX", "output/CommonHTML"],
    TeX: {
      extensions: [
        "AMSmath.js",
        "AMSsymbols.js",
        "noErrors.js",
        "noUndefined.js",
      ]
    }
  });
</script>
</head>

<p><a href="http://en.wikipedia.org/wiki/Berkson%27s_paradox">Berkson‚Äôs paradox</a> describes a situation when two independent events become negatively correlated after one of them occurs. Here is an illustration.</p>

<p>A few weeks ago <a href="https://youtu.be/DdmyUZCl75s">Peter Norvig</a> said that ‚Äúbeing a winner at one of these programming contests was actually a negative factor for performing well on the job‚Äù. As a possible expalantion he mentioned that the winners are used to hacking a solution fast and moving to a next thing, which may not necessarily be good for the job.</p>

<p><img src="http://zliobaite.github.io/assets/fig_Berksons.png" alt="Toy example" /></p>

<p>Suppose a university is selecting candidates for a master programme. Performance at contests is evaluated from 0 to 100, and performance at jobs is also evaluated from 0 to 100. Students with a combined score of 150 or more are accepted, as illustrated. The correlation between the contest score and job score among those accepted would be about -0.48, meaning that if somebody among the accepted candidates is good in contests, it is likely that s/he was bad at jobs.</p>

<p>This happens because sample selection is biased in a way that candidates that are bad at both are eliminated. This does not mean that the selection procedure is flawed. This effect happens <em>within</em> the pool of selected candidates. It ilustrates dangers of making conclusions from a biased sample.</p>

:ET